"use strict";(self.webpackChunksolana_web3_demo=self.webpackChunksolana_web3_demo||[]).push([[9547],{7463:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-5451dee8",path:"/zh/advanced/metaplex/get-tokenmeta.html",title:"Get Tokenmeta",lang:"zh-TW",frontmatter:{},excerpt:"",headers:[],filePathRelative:"zh/advanced/metaplex/get-tokenmeta.md",git:{updatedTime:1662889975e3,contributors:[{name:"Yasin Aktimur",email:"yasinaktimur@gmail.com",commits:1}]}}},5249:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="get-tokenmeta" tabindex="-1"><a class="header-anchor" href="#get-tokenmeta" aria-hidden="true">#</a> Get Tokenmeta</h1><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Connection<span class="token punctuation">,</span> PublicKey <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@solana/web3.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Metadata <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@metaplex-foundation/mpl-token-metadata&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// NFT 其實就跟 SRM, USDC ... 一樣，只是一個mint，唯一不同的地方就是他的發行量是1</span>\n<span class="token comment">//</span>\n<span class="token comment">// 如果你想要抓取NFT的metadata，首先你要先知道該NFT的mint地址</span>\n<span class="token comment">// 下面我隨便抓一個NFT來當做例子</span>\n<span class="token comment">// https://explorer.solana.com/address/9MwGzSyuQRqmBHqmYwE6wbP3vzRBj4WWiYxWns3rkR7A</span>\n<span class="token comment">//</span>\n<span class="token comment">// tokenmeta會存在一個PDA內，他的算法是依據NFT的mint地址算出來的</span>\n<span class="token comment">// =&gt; [&#39;metadata&#39;, metadata_program_id, mint_id]</span>\n<span class="token comment">// 只要知道就可以了，因為SDK都幫我們包好了</span>\n\n<span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connection</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.mainnet-beta.solana.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> mintPubkey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PublicKey</span><span class="token punctuation">(</span><span class="token string">&quot;9MwGzSyuQRqmBHqmYwE6wbP3vzRBj4WWiYxWns3rkR7A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> tokenmetaPubkey <span class="token operator">=</span> <span class="token keyword">await</span> Metadata<span class="token punctuation">.</span><span class="token function">getPDA</span><span class="token punctuation">(</span>mintPubkey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> tokenmeta <span class="token operator">=</span> <span class="token keyword">await</span> Metadata<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> tokenmetaPubkey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tokenmeta<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>',2),e={},p=(0,a(3744).Z)(e,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);
"use strict";(self.webpackChunksolana_web3_demo=self.webpackChunksolana_web3_demo||[]).push([[7431],{2284:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-5439b71c",path:"/zh/advanced/metaplex/mint-nft.html",title:"Mint NFT",lang:"zh-TW",frontmatter:{},excerpt:"",headers:[{level:2,title:"v1 toke metadata + v1 master edition",slug:"v1-toke-metadata-v1-master-edition",children:[]},{level:2,title:"v2 token metadata + v3 master edition",slug:"v2-token-metadata-v3-master-edition",children:[]}],filePathRelative:"zh/advanced/metaplex/mint-nft.md",git:{updatedTime:1662889975e3,contributors:[{name:"Yasin Aktimur",email:"yasinaktimur@gmail.com",commits:1}]}}},6658:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="mint-nft" tabindex="-1"><a class="header-anchor" href="#mint-nft" aria-hidden="true">#</a> Mint NFT</h1><h2 id="v1-toke-metadata-v1-master-edition" tabindex="-1"><a class="header-anchor" href="#v1-toke-metadata-v1-master-edition" aria-hidden="true">#</a> v1 toke metadata + v1 master edition</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Keypair<span class="token punctuation">,</span> Connection<span class="token punctuation">,</span> PublicKey<span class="token punctuation">,</span> Transaction<span class="token punctuation">,</span> SystemProgram <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@solana/web3.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> base58 <span class="token keyword">from</span> <span class="token string">&quot;bs58&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  createAssociatedTokenAccountInstruction<span class="token punctuation">,</span>\n  createInitializeMintInstruction<span class="token punctuation">,</span>\n  createMintToCheckedInstruction<span class="token punctuation">,</span>\n  getAssociatedTokenAddress<span class="token punctuation">,</span>\n  getMinimumBalanceForRentExemptMint<span class="token punctuation">,</span>\n  <span class="token constant">MINT_SIZE</span><span class="token punctuation">,</span>\n  <span class="token constant">TOKEN_PROGRAM_ID</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@solana/spl-token&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  <span class="token constant">PROGRAM_ID</span> <span class="token keyword">as</span> <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span><span class="token punctuation">,</span>\n  createCreateMetadataAccountInstruction<span class="token punctuation">,</span>\n  createCreateMasterEditionInstruction<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@metaplex-foundation/mpl-token-metadata&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connection</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.devnet.solana.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 5pVyoAeURQHNMVU7DmfMHvCDNmTEYXWfEwc136GYhTKG</span>\n<span class="token keyword">const</span> feePayer <span class="token operator">=</span> Keypair<span class="token punctuation">.</span><span class="token function">fromSecretKey</span><span class="token punctuation">(</span>\n  base58<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&quot;5MaiiCavjCmn9Hs1o3eznqDEhRwxo7pXiAYez7keQUviUkauRiTMD8DrESdrNjN8zd9mTmVhRvBJeg5vhyvgrAhG&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> mint <span class="token operator">=</span> Keypair<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">mint: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span><span class="token function">toBase58</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> ata <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAssociatedTokenAddress</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> tokenMetadataPubkey <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getMetadataPDA</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> masterEditionPubkey <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getMasterEditionPDA</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>\n    SystemProgram<span class="token punctuation">.</span><span class="token function">createAccount</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      fromPubkey<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n      newAccountPubkey<span class="token operator">:</span> mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n      lamports<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token function">getMinimumBalanceForRentExemptMint</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      space<span class="token operator">:</span> <span class="token constant">MINT_SIZE</span><span class="token punctuation">,</span>\n      programId<span class="token operator">:</span> <span class="token constant">TOKEN_PROGRAM_ID</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createInitializeMintInstruction</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createAssociatedTokenAccountInstruction</span><span class="token punctuation">(</span>feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> ata<span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createMintToCheckedInstruction</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> ata<span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createCreateMetadataAccountInstruction</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        metadata<span class="token operator">:</span> tokenMetadataPubkey<span class="token punctuation">,</span>\n        mint<span class="token operator">:</span> mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        mintAuthority<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        payer<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        updateAuthority<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        createMetadataAccountArgs<span class="token operator">:</span> <span class="token punctuation">{</span>\n          data<span class="token operator">:</span> <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&quot;Fake SMS #1355&quot;</span><span class="token punctuation">,</span>\n            <span class="token builtin">symbol</span><span class="token operator">:</span> <span class="token string">&quot;FSMB&quot;</span><span class="token punctuation">,</span>\n            uri<span class="token operator">:</span> <span class="token string">&quot;https://34c7ef24f4v2aejh75xhxy5z6ars4xv47gpsdrei6fiowptk2nqq.arweave.net/3wXyF1wvK6ARJ_9ue-O58CMuXrz5nyHEiPFQ6z5q02E&quot;</span><span class="token punctuation">,</span>\n            sellerFeeBasisPoints<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n            creators<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                address<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n                verified<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                share<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          isMutable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createCreateMasterEditionInstruction</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        edition<span class="token operator">:</span> masterEditionPubkey<span class="token punctuation">,</span>\n        mint<span class="token operator">:</span> mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        updateAuthority<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        mintAuthority<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        payer<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        metadata<span class="token operator">:</span> tokenMetadataPubkey<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        createMasterEditionArgs<span class="token operator">:</span> <span class="token punctuation">{</span>\n          maxSupply<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> <span class="token punctuation">[</span>feePayer<span class="token punctuation">,</span> mint<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getMetadataPDA</span><span class="token punctuation">(</span>mint<span class="token operator">:</span> PublicKey<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>PublicKey<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>publicKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddress</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;metadata&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span><span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mint<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> publicKey<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getMasterEditionPDA</span><span class="token punctuation">(</span>mint<span class="token operator">:</span> PublicKey<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>PublicKey<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>publicKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddress</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;metadata&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span><span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mint<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;edition&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> publicKey<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br></div></div><h2 id="v2-token-metadata-v3-master-edition" tabindex="-1"><a class="header-anchor" href="#v2-token-metadata-v3-master-edition" aria-hidden="true">#</a> v2 token metadata + v3 master edition</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Keypair<span class="token punctuation">,</span> Connection<span class="token punctuation">,</span> PublicKey<span class="token punctuation">,</span> Transaction<span class="token punctuation">,</span> SystemProgram <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@solana/web3.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> base58 <span class="token keyword">from</span> <span class="token string">&quot;bs58&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  createAssociatedTokenAccountInstruction<span class="token punctuation">,</span>\n  createInitializeMintInstruction<span class="token punctuation">,</span>\n  createMintToCheckedInstruction<span class="token punctuation">,</span>\n  getAssociatedTokenAddress<span class="token punctuation">,</span>\n  getMinimumBalanceForRentExemptMint<span class="token punctuation">,</span>\n  <span class="token constant">MINT_SIZE</span><span class="token punctuation">,</span>\n  <span class="token constant">TOKEN_PROGRAM_ID</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@solana/spl-token&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  <span class="token constant">PROGRAM_ID</span> <span class="token keyword">as</span> <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span><span class="token punctuation">,</span>\n  createCreateMetadataAccountV2Instruction<span class="token punctuation">,</span>\n  createCreateMasterEditionV3Instruction<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@metaplex-foundation/mpl-token-metadata&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connection</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.devnet.solana.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 5pVyoAeURQHNMVU7DmfMHvCDNmTEYXWfEwc136GYhTKG</span>\n<span class="token keyword">const</span> feePayer <span class="token operator">=</span> Keypair<span class="token punctuation">.</span><span class="token function">fromSecretKey</span><span class="token punctuation">(</span>\n  base58<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&quot;5MaiiCavjCmn9Hs1o3eznqDEhRwxo7pXiAYez7keQUviUkauRiTMD8DrESdrNjN8zd9mTmVhRvBJeg5vhyvgrAhG&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> mint <span class="token operator">=</span> Keypair<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">mint: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span><span class="token function">toBase58</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> ata <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAssociatedTokenAddress</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> tokenMetadataPubkey <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getMetadataPDA</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> masterEditionPubkey <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getMasterEditionPDA</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>\n    SystemProgram<span class="token punctuation">.</span><span class="token function">createAccount</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      fromPubkey<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n      newAccountPubkey<span class="token operator">:</span> mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n      lamports<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token function">getMinimumBalanceForRentExemptMint</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      space<span class="token operator">:</span> <span class="token constant">MINT_SIZE</span><span class="token punctuation">,</span>\n      programId<span class="token operator">:</span> <span class="token constant">TOKEN_PROGRAM_ID</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createInitializeMintInstruction</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createAssociatedTokenAccountInstruction</span><span class="token punctuation">(</span>feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> ata<span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createMintToCheckedInstruction</span><span class="token punctuation">(</span>mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> ata<span class="token punctuation">,</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createCreateMetadataAccountV2Instruction</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        metadata<span class="token operator">:</span> tokenMetadataPubkey<span class="token punctuation">,</span>\n        mint<span class="token operator">:</span> mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        mintAuthority<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        payer<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        updateAuthority<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        createMetadataAccountArgsV2<span class="token operator">:</span> <span class="token punctuation">{</span>\n          data<span class="token operator">:</span> <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&quot;Fake SMS #1355&quot;</span><span class="token punctuation">,</span>\n            <span class="token builtin">symbol</span><span class="token operator">:</span> <span class="token string">&quot;FSMB&quot;</span><span class="token punctuation">,</span>\n            uri<span class="token operator">:</span> <span class="token string">&quot;https://34c7ef24f4v2aejh75xhxy5z6ars4xv47gpsdrei6fiowptk2nqq.arweave.net/3wXyF1wvK6ARJ_9ue-O58CMuXrz5nyHEiPFQ6z5q02E&quot;</span><span class="token punctuation">,</span>\n            sellerFeeBasisPoints<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n            creators<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                address<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n                verified<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                share<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            collection<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n            uses<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          isMutable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">createCreateMasterEditionV3Instruction</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        edition<span class="token operator">:</span> masterEditionPubkey<span class="token punctuation">,</span>\n        mint<span class="token operator">:</span> mint<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        updateAuthority<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        mintAuthority<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        payer<span class="token operator">:</span> feePayer<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span>\n        metadata<span class="token operator">:</span> tokenMetadataPubkey<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        createMasterEditionArgs<span class="token operator">:</span> <span class="token punctuation">{</span>\n          maxSupply<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> <span class="token punctuation">[</span>feePayer<span class="token punctuation">,</span> mint<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getMetadataPDA</span><span class="token punctuation">(</span>mint<span class="token operator">:</span> PublicKey<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>PublicKey<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>publicKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddress</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;metadata&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span><span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mint<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> publicKey<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getMasterEditionPDA</span><span class="token punctuation">(</span>mint<span class="token operator">:</span> PublicKey<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>PublicKey<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>publicKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> PublicKey<span class="token punctuation">.</span><span class="token function">findProgramAddress</span><span class="token punctuation">(</span>\n    <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;metadata&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span><span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mint<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;edition&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token constant">MPL_TOKEN_METADATA_PROGRAM_ID</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> publicKey<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br></div></div>',5),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,p]of s)n[a]=p;return n}}}]);